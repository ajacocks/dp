---
# tasks file for roles/aws.create
#===============================================================================
#  Provisioning
#===============================================================================

#---------------------------------------------------
#  Ansible Hosts Creation
#---------------------------------------------------
- name: Template Ansible Hosts File
  template:
    dest: "{{ inventory_working_dir }}/hosts"
    src: "hosts.j2"
  when: execution is defined

#---------------------------------------------------
#  Deployment directory creation
#---------------------------------------------------
- name: Make temporary location to run deployment
  file:
    path: "{{ deploy_working_dir }}"
    state: directory

#---------------------------------------------------
#  WinRM templating
#---------------------------------------------------
- name: Template Windows WinRM configuration
  template:
    dest: "{{ winrm_path }}"
    src: "winrm.txt.j2"

#---------------------------------------------------
#  EC2 INI Creation
#---------------------------------------------------
- name: Template EC2 INI File
  template: dest="{{ inventory_working_dir }}/ec2.ini"  src=ec2.ini.j2
  when: execution is defined

#---------------------------------------------------
#  SSH Key
#---------------------------------------------------
- name: Create EC2 keypair
  ec2_key:
    name: "dp-{{ workshop_prefix }}-key"
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    state: present
  register: ec2_key

- debug:
    var: ec2_key

- name: Create ssh keypair
  copy:
    content: "{{ ec2_key.key.private_key }}\n"
    dest: "{{ ssh_key_path }}"
    mode: 0400
  when: ec2_key.changed

#---------------------------------------------------
#  Create AWS objects
#---------------------------------------------------
- name: Create VPC
  ec2_vpc_net:
    name: "dp-{{ workshop_prefix }}-vpc"
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    cidr_block: "10.0.0.0/16"
    dns_hostnames: yes
    dns_support: yes
    tags:
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
    state: present
  register: ec2_vpc

- debug:
    var: ec2_vpc

- name: Create VPC internet gateway
  ec2_vpc_igw:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    vpc_id: "{{ ec2_vpc.vpc.id }}"
    state: present
    tags:
      Name: "dp-{{ workshop_prefix }}-igw"
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
  register: ec2_igw

- debug:
    var: ec2_igw

- name: Create RHEL security group
  ec2_group:
    name: "dp-{{ workshop_prefix }}-rhel-sg"
    description: "SG for RHEL hosts"
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    vpc_id: "{{ ec2_vpc.vpc.id }}"
    rules:
    - proto: "tcp"
      ports: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: "allow all on port 22 (SSH)"
#    - proto: tcp
#      ports: 8888
#      cidr_ip: 0.0.0.0/0
#      rule_desc: "allow all on port 8888 (wetty)"
    tags:
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
      rhel: "dp-{{ workshop_prefix }}"
    state: present

- name: Create Windows security group
  ec2_group:
    name: "dp-{{ workshop_prefix }}-win-sg"
    description: "SG for Windows hosts"
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    vpc_id: "{{ ec2_vpc.vpc.id }}"
    rules:
    - proto: "tcp"
      ports: 3389
      cidr_ip: 0.0.0.0/0
      rule_desc: "allow all on TCP port 3389 (Remote Desktop)"
    - proto: "udp"
      ports: 3389
      cidr_ip: 0.0.0.0/0
      rule_desc: "allow all on UDP port 3389 (Remote Desktop)"
#    - proto: "tcp"
#      ports: 5985
#      cidr_ip: 0.0.0.0/0
#      rule_desc: "allow all on port 5985 (WinRM HTTP)"
    - proto: "tcp"
      ports: 5986
      cidr_ip: 0.0.0.0/0
      rule_desc: "allow all on port 5986 (WinRM HTTPS)"
    tags:
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
      win: "dp-{{ workshop_prefix }}"
    state: present

- name: Create public subnet
  ec2_vpc_subnet:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    cidr: "10.0.2.0/24"
    region: "{{ region }}"
    vpc_id: "{{ ec2_vpc.vpc.id }}"
    tags:
      Name: "dp-{{ workshop_prefix }}-subnet"
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
    wait: yes
  register: ec2_subnet

- debug:
    var: ec2_subnet

- name: Create VPC route table
  ec2_vpc_route_table:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    region: "{{ region }}"
    vpc_id: "{{ ec2_vpc.vpc.id }}"
    subnets:
      - "{{ ec2_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ ec2_igw.gateway_id }}"
    lookup: tag
    tags:
      Name: "dp-{{ workshop_prefix }}-route"
      username: "{{ local_user }}"
      workshop: "dp"
      workshop_prefix: "{{ workshop_prefix }}"
    state: present
  register: ec2_route

- debug:
    var: ec2_route

- name: Create RHEL instances
# ansible --private-key=/home/ajacocks/Dropbox/src/dp/.redhatgov/dp-key -m ping tag_name_{{ workshop_prefix }}_dp_rhel
  ec2:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    assign_public_ip: yes
    key_name: "dp-{{ workshop_prefix }}-key"
    group: "dp-{{ workshop_prefix }}-rhel-sg"
    region: "{{ region }}"
    instance_type: "{{ nodes.rhel.instance_type }}"
    image: "{{ nodes.rhel.ami_id }}"
    vpc_subnet_id: "{{ ec2_subnet.subnet.id }}"
    wait: true
    instance_tags:
      Name: "dp-{{ workshop_prefix }}-rhel"
      username: "{{ local_user }}"
      workshop_prefix: "{{ workshop_prefix }}"
      rhel: "dp-{{ workshop_prefix }}"
    exact_count: "{{ nodes.rhel.count }}"
    count_tag: rhel
  register: ec2_rhel

- debug:
    var: item
  with_items: "{{ ec2_rhel.tagged_instances }}"

- name: Create Windows instances
  ec2:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    assign_public_ip: yes
    key_name: "dp-{{ workshop_prefix }}-key"
    group: "dp-{{ workshop_prefix }}-win-sg"
    region: "{{ region }}"
    instance_type: "{{ nodes.win.instance_type }}"
    image: "{{ nodes.win.ami_id }}"
    vpc_subnet_id: "{{ ec2_subnet.subnet.id }}"
    user_data: "{{ lookup('file', '{{ winrm_path }}') }}"
    wait: true
    instance_tags:
      Name: "dp-{{ workshop_prefix }}-win"
      username: "{{ local_user }}"
      workshop_prefix: "{{ workshop_prefix }}"
      win: "dp-{{ workshop_prefix }}"
    exact_count: "{{ nodes.win.count }}"
    count_tag: win
  register: ec2_win

- debug:
    var: ec2_win

#===============================================================================
#  Verify hosts online
#===============================================================================

#---------------------------------------------------
#  RHEL
#---------------------------------------------------

#- name: wait for SSH to answer on all hosts
#  wait_for:
#    port: 22
#    host: "{{ item.public_ip }}"
#    timeout: 300
#  with_items: "{{ ec2_rhel.tagged_instances }}"

- name: add RHEL hosts to groups
  add_host:
    name: dp-{{ workshop_prefix}}-rhel-{{ item.id }}
    ansible_ssh_host: "{{ item.public_ip }}"
    groups: rhel_nodes
  with_items: "{{ ec2_rhel.tagged_instances }}"

#---------------------------------------------------
#  Windows
#---------------------------------------------------

#- name: wait for WinRM to answer on all hosts
#  wait_for:
#    port: 5986
#    host: "{{ item.public_ip }}"
#    timeout: 300
#  with_items: "{{ ec2_win.tagged_instances }}"

- name: add Windows hosts to groups
  add_host:
    name: dp-{{ workshop_prefix}}-win-{{ item.id }}
    ansible_ssh_host: "{{ item.public_ip }}"
    groups: win_nodes
  with_items: "{{ ec2_win.tagged_instances }}"

#- name: Create DNS records
#  route53:
#    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
#    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
#    region: "{{ region }}"
#    zone: "{{ domain_name }}"
#    type: "CNAME"
#    ttl: "300"
#    record: "{{ workshop_prefix }}.rhel.{{ item }}.dp.redhatgov.io"
#    value: "\{{ ec2.instances.\{{ item \}}.dns_name \}}"
#    value: "{{ lookup('vars', ec2.instances + '.' + item + '.' + dns_name) }}"
#    value: 
#    wait: yes
#    state: present
#  with_sequence: count={{ nodes.rhel.count }} start=0
#  with_items: ec2.ami_launch_index

...
