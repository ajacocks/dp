---
# tasks file for tower.create

#===============================================================================
#  Prep
#===============================================================================

- name: Check to see if Tower is already installed
  command: rpm -q ansible-tower
  ignore_errors: yes
  register: tower_package
  changed_when: false

- name: Check to see if Tower is already installed
  yum:
    list: ansible-tower
  register: yum_list

- block:
  - name: Create a temporary working directory
    tempfile:
      state: directory
    register: workdir
  
  - name: Download Ansible Tower bundle
    get_url:
      url: "{{ tower_bundle_url }}"
      dest: "{{ workdir.path }}/{{ tower_bundle_file }}"
      mode: 0444
  
  - name: Extract Tower bundle
    unarchive:
      src: "{{ workdir.path }}/{{ tower_bundle_file }}"
      dest: "{{ workdir.path }}"
      remote_src: true
  
  - name: Locate extracted Tower files
    find:
      paths: "{{ workdir.path }}"
      file_type: "directory"
      patterns: "ansible-tower-setup-*"
    register: tower
  
  - debug:
      var: tower.files[0].path
  when: yum_list.results | selectattr("yumstate", "match", "installed") | list | length == 0

#===============================================================================
#  Install
#===============================================================================

- block:
  - name: Configure setup manifest - rabbitmq
    become: yes
    replace:
      path: "{{ tower.files[0].path }}/inventory"
      regexp: '^rabbitmq_password=.*$'
      replace: "rabbitmq_password='{{ rabbit_password }}'"
      backup: yes
  
  - name: Configure setup manifest
    become: yes
    replace:
      path: "{{ tower.files[0].path }}/inventory"
      regexp: "password=''$"
      replace: "password='{{ workshop_password }}'"
      backup: yes
  
  - debug:
      msg: "Launching Ansible Tower setup - please be patient, as this task often takes over 15 minutes."
  
  - name: Install Ansible Tower
    become: yes
    command: "{{ tower.files[0].path }}/setup.sh"
    async: 1800
    poll: 30
  when: yum_list.results | selectattr("yumstate", "match", "installed") | list | length == 0

- name: Install Ansible Tower License Key
  uri:
    url: "https://localhost/api/v1/config/"
    method: "POST"
    body: " {{ lookup('file','{{ deploy_working_dir }}/{{ tower_license_file }}') }}"
    force_basic_auth: yes
    user: "admin"
    password: "{{ workshop_password }}"
    headers:
      Content-Type: "application/json"
    validate_certs: no
  register: tower_key

...
