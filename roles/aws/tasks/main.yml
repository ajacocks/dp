---
# tasks file for roles/aws
#---------------------------------------------------
#  Ansible Hosts Creation
#---------------------------------------------------
- name: Template Ansible Hosts File
  template: dest="{{ inventory_working_dir }}/hosts"  src=hosts.j2
  tags:
    - create

#---------------------------------------------------
#  EC2 INI Creation
#---------------------------------------------------
- name: Template EC2 INI File
  template: dest="{{ inventory_working_dir }}/ec2.ini"  src=ec2.ini.j2
  tags:
    - create

#---------------------------------------------------
#  SSH Key
#---------------------------------------------------
- name: Check for existing key and remove
  ec2_key:
    name: "{{ workshop_prefix }}-key"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    state: absent
#    instance_tags:
#    - { username: "{{ username }}" }
#    - { workshop_prefix: "{{ workshop_prefix }}" }
  tags:
    - create

- name: Create EC2 keypair
  ec2_key:
    name: "{{ workshop_prefix }}-key"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    state: present
  register: ec2_key
  tags:
    - create

- debug:
    var: ec2_key
  tags:
    - create

- name: Make temporary location to run deployment
  file:
    path: "{{ deploy_working_dir }}"
    state: directory
  tags:
    - create

- name: Create ssh keypair
  copy:
    content: "{{ ec2_key.key.private_key }}\n"
    dest: "{{ ssh_key_path }}"
    mode: 0400
  tags:
    - create

#---------------------------------------------------
#  Create AWS objects
#---------------------------------------------------
- name: Create VPC
  ec2_vpc_net:
    name: "{{ workshop_prefix }}-name"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ region }}"
    cidr_block: "10.0.0.0/16"
    dns_hostnames: yes
    dns_support: yes
    tags:
      username: "{{ username }}"
      workshop_prefix: "{{ workshop_prefix }}"
    state: present
  register: ec2_vpc
  tags:
    - create

- debug:
    var: ec2_vpc
  tags:
    - create

# - name: Create RHEL security group
#   ec2_group:
#     name: "{{ workshop_prefix }}-sg"
#     aws_access_key: "{{ aws_access_key }}"
#     aws_secret_key: "{{ aws_secret_key }}"
#     region: "{{ region }}"
#     vpc_id: "{{ ec2_vpc.vpc.id }}"
#     rules:
#     - proto: tcp
#         ports:
#         - 22
#         cidr_ip: 0.0.0.0/0
#         rule_desc: "allow all on port 22 (SSH)"
#     - proto: tcp
#         ports:
#         - 8888
#         cidr_ip: 0.0.0.0/0
#         rule_desc: "allow all on port 8888 (wetty)"
#     state: present
#   tags:
#     - create

# - name: Create RHEL instances
#   ec2:
#     aws_access_key: "{{ aws_access_key }}"
#     aws_secret_key: "{{ aws_secret_key }}"
#     assign_public_ip: yes
#     key_name: "{{ workshop_prefix }}-key"
#     group: "{{ workshop_prefix }}-sg"
#     region: "{{ region }}"
#     instance_type: "{{ nodes.rhel.instance_type }}"
#     image: "{{ nodes.rhel.ami_id }}"
#     wait: true
#     exact_count: "{{ nodes.rhel.count }}"
#     count_tag:
#       name: "rhel"
#     instance_tags:
#     - { name: "{{ workshop_prefix }}" }
#     - { username: "{{ username }}" }
#     - { workshop_prefix: "{{ workshop_prefix }}" }
#     state: present
#   register: ec2
#   tags:
#     - create

...
